name: arm64-bullseye-build

on:
  # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    environment: docker
    strategy:
      matrix:
        arch_name:
          - {
              gcc_version: "10.2.0",
              pi_os: "bullseye",
              toolchain: "https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Cross-Compiler%20Toolchains/Bullseye/GCC%2010.2.0/cross-gcc-10.2.0-pi_64.tar.gz",

            }
          - {
              gcc_version: "10.3.0",
              pi_os: "bullseye",
              toolchain: "https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Bonus%20Raspberry%20Pi%20GCC%2064-Bit%20Toolchains/Raspberry%20Pi%20GCC%2064-Bit%20Cross-Compiler%20Toolchains/Bullseye/GCC%2010.3.0/cross-gcc-10.3.0-pi_64.tar.gz",
            }
    steps:
      - uses: actions/checkout@v2
      # job start
      - name: Download toolchain
        run: |
          wget -q ${{ matrix.arch_name.toolchain }}
          tar xf cross-gcc-${{ matrix.arch_name.gcc_version }}-pi_64.tar.gz
      - name: docker build
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          docker build --build-arg GCC_VER=${{ matrix.arch_name.gcc_version }} \
                       --build-arg PI_OS=${{ matrix.arch_name.pi_os }} \
                       -f ./arm64/Dockerfile \
                       -t $DOCKER_USER/pi-cross:arm64-${{ matrix.arch_name.pi_os }}-${{ matrix.arch_name.gcc_version }} \
                       ./
      - name: verify
        run: |
          docker images
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: docker push
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
        run: |
          docker push $DOCKER_USER/pi-cross:arm64-${{ matrix.arch_name.pi_os }}-${{ matrix.arch_name.gcc_version }}
